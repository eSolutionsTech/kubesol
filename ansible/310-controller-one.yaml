# loosely based on https://blog.devgenius.io/automating-installation-of-ha-rke2-kubernetes-cluster-with-ansible-2456cc95d970
---
- name: Configurate controller one
  hosts: controller_one
  gather_facts: false
  vars:
    CONFIG_FILE: /etc/rancher/rke2/config.yaml

  tasks:
    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        recurse: true
      loop:
        - /etc/rancher/rke2
        - /var/lib/rancher/rke2/server/manifests

    - name: Get hostname short
      shell: |
        hostname -s
      register: hostname_short
      changed_when: false

    - name: Hostname fqdn
      shell: |
        hostname -f
      register: hostname_fqdn
      changed_when: false

    - name: Print hostname fqdn and short
      debug:
        msg:
          - "hostname short '{{ hostname_short.stdout }}'"
          - "hostname fqdn: '{{ hostname_fqdn.stdout }}'"

    - name: Creating the config.yaml
      copy:
        dest: "{{ CONFIG_FILE }}"
        content: |
          tls-san:
            - "{{ hostname_short.stdout }}"
            - "{{ hostname_fqdn.stdout }}"
            - "{{ hosts_gw }}"
            - "{{ ext_dns_name }}"
          cni: "cilium"
          {% if controller_worker is not defined %}
          node-taint:
            - "CriticalAddonsOnly=true:NoExecute"
          {% endif %}
      notify: "rke2-server service restart"

    - name: Creating the CoreDNS config file
      copy:
        dest: "/var/lib/rancher/rke2/server/manifests/rke2-coredns-config.yaml"
        content: |
          apiVersion: helm.cattle.io/v1
          kind: HelmChartConfig
          metadata:
            creationTimestamp: null
            name: rke2-coredns
            namespace: kube-system
          spec:
            valuesContent: |-
              nodelocal:
                enabled: true # Change this to false or remove this (Creating the CoreDNS config file) section altogether if you donâ€™t want to install NodeLocal DNSCache
            bootstrap: true
      notify: "rke2-server service restart"

    - name: Download rke2.sh
      get_url:
        url: https://get.rke2.io
        dest: /root/rke2.sh
        mode: '0700'

    - name: Installing rke2 server
      command: /root/rke2.sh
      environment:
        INSTALL_RKE2_VERSION: "{{ rke2_version | default('') }}"

    - name: Starting rke2 server
      systemd:
        name: rke2-server
        state: restarted
        enabled: true

    - name: Kubeconfig directory
      file:
        path: /root/.kube
        state: directory
        mode: '0700'

    - name: Kubeconfig link
      file:
        dest: /root/.kube/config
        src: /etc/rancher/rke2/rke2.yaml
        state: link

    - name: Kubectl binary
      file:
        dest: /usr/local/bin/kubectl
        src: /var/lib/rancher/rke2/bin/kubectl
        state: link

  handlers:
    - name: Make sure a service unit is restarted
      systemd:
        name: rke2-server
        state: restarted
        enabled: true
      listen: "rke2-server service restart"
